version: "3.3"

services:
  # Kafka, taken from: https://github.com/wurstmeister/kafka-docker
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: kafka-docker/.
    ports:
      - "9092:9092"
    depends_on:
      - "zookeeper"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "topico-entrada:1:1,topico-salida:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # Mongo
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: splunk-apm-poc
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/

  # Applications
  api:
    build: api/.
    ports:
      - "3000-3009:3000"
    environment:
      DT_LOGLEVELCON: INFO
      # Enable if OneAgent should be disabled and Trace Ingest should be used
      # DT_INJECTION_RULES: ::EXCLUDE:ALL,,
      OTEL_RESOURCE_ATTRIBUTES: "service.name=eric-api-producer"
      CLUSTER: a
    depends_on:
      - "zookeeper"
      - "kafka"
  consumer:
    build: consumer/.
    depends_on:
      - "zookeeper"
      - "kafka"
      - "mongo"
    environment:
      DT_LOGLEVELCON: INFO
      # Enable if OneAgent should be disabled and Trace Ingest should be used
      # DT_INJECTION_RULES: ::EXCLUDE:ALL,,
      OTEL_RESOURCE_ATTRIBUTES: "service.name=eric-api-consumer"
      CLUSTER: a

  # OpenTelemetry Collector
  # otel-collector:
  #   build: otel-collector/.
  #   ports:
  #     - "1888:1888"
  #     - "8888:8888"
  #     - "8889:8889"
  #     - "13133:13133"
  #     - "4317:4317"
  #     - "55670:55670"

  # Load generator
  client:
    build: client/.
    environment:
      DT_LOGLEVELCON: INFO
      CLUSTER: a
